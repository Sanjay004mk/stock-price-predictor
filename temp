# import numpy as np
# from sklearn import preprocessing, model_selection
# from sklearn.linear_model import LinearRegression


# def forecast_data(row, forecast_out):
#         X = np.array(row).reshape(-1, 1)
#         X = preprocessing.scale(X)
#         X_forecast = X[-forecast_out:]
#         X = X[:-forecast_out]
#         y = np.array(row.shift(-forecast_out))
#         y = y[:-forecast_out]
#         X_train, X_test, y_train, y_test = model_selection.train_test_split(X, y, test_size = 0.2)
#         # Applying Linear Regression
#         clf = LinearRegression()
#         clf.fit(X_train,y_train)
#         # Prediction Score
#         confidence = clf.score(X_test, y_test)
#         # Predicting for 'n' days stock data
#         forecast_prediction = clf.predict(X_forecast)
#         return forecast_prediction.tolist()